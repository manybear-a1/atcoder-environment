{
  "prefix sum": {
    "description": "prefix sum",
    "prefix": "prefix sum",
    "body": [
      "//prefix sum",
      "vector<ll> prefix_sum(const vector<ll> &a)",
      "{",
      "  int n = a.size();",
      "  vector<ll> sum(n + 1, 0);",
      "  rep(i, n)",
      "  {",
      "    sum.at(i + 1) = sum.at(i) + a.at(i);",
      "  }",
      "  return sum;",
      "}",
      "/*",
      "get_sum(sum, l, r)",
      "    入力：prefix_sum で得た sum, 区間 [l, r)",
      "    出力：区間 [l, r) の総和",
      "    注意：",
      "    半開区間なので全部調べるときはrep(i, N + 1)で回す事が多い",
      "*/",
      "ll get_sum(const vector<ll> &sum, int l, int r)",
      "{",
      "  if (l < 0 || r < 0)",
      "  {",
      "    cout << \"invalid input\" << endl;",
      "    return -1;",
      "  }",
      "  if (l > r) swap(l, r);",
      "  return sum.at(r) - sum.at(l);",
      "}",
    ],
  },
  "prefix sum 2d": {
    "description": "prefix sum 2d",
    "prefix": "prefix sum 2d",
    "body": [
      "//prefix sum",
      "vector<vector<ll>> prefix_sum(const vector<vector<ll>> &a)",
      "{",
      "  int H = a.size();",
      "  int W = a.at(0).size();",
      "  vector<vector<ll>> sum(H + 1, vector<ll>(W + 1, 0));",
      "  rep(i, H) rep(j, W)",
      "  {",
      "    sum.at(i + 1).at(j + 1) = sum.at(i + 1).at(j) + sum.at(i).at(j + 1) - sum.at(i).at(j) + a.at(i).at(j);",
      "  }",
      "  return sum;",
      "}",
      "/*",
      "get_sum(sum, l, r)",
      "    入力：prefix_sum で得た sum, 区間 [l, r)",
      "    出力：区間 [l, r) の総和",
      "    注意：",
      "    半開区間なので全部調べるときはrep(y,H+1)rep(x,W+1)で回す事が多い",
      "    l = (y1, x1), r = (y2, x2)",
      "*/",
      "ll get_sum(const vector<vector<ll>> &sum, pair<int, int> l, pair<int, int> r)",
      "{",
      "  return sum.at(r.first).at(r.second) - sum.at(l.first).at(r.second) - sum.at(r.first).at(l.second) + sum.at(l.first).at(l.second);",
      "}",
    ]
  },
  "imos": {
    "description": "imos",
    "prefix": "imos",
    //ref:https://imoz.jp/algorithms/imos_method.html
    "body": [
      "/*imos法",
      "[l, r)に1を足す操作をm回行うときのimos法",
      "*/",
      "vector<ll> imos_lr(ll n, const vector<ll> &l, const vector<ll> &r)",
      "{",
      "  int m = l.size();",
      "  vector<ll> imos(n + 1, 0);",
      "  rep(i, m)",
      "  {",
      "    imos.at(l.at(i))++;",
      "    imos.at(r.at(i))--;",
      "  }",
      "  rep(i, n - 1)",
      "  {",
      "    imos.at(i + 1) += imos.at(i);",
      "  }",
      "  return imos;",
      "}",
      "// imos法",
      "//あらかじめ区間に対して関数を適応しておく必要がある",
      "vector<ll> imos(vector<ll> &sum)",
      "{",
      "  ll n = sum.size();",
      "  vector<ll> res = sum;",
      "  for_(i, 1, n)",
      "  {",
      "    res[i] += res[i - 1];",
      "  }",
      "  return res;",
      "}",
    ]
  },
  "imos 2d": {
    "description": "imos 2d",
    "prefix": "imos 2d",
    //ref:https://imoz.jp/algorithms/imos_method.html
    "body": [
      "//imos 2d",
      "struct Square{",
      "  ll y1, x1, y2, x2;",
      "};",
      "//ref:https://imoz.jp/algorithms/imos_method.html",
      "vector<vector<ll>> imos_2d(const vector<vector<ll>> &a , const vector<Square> &squares)",
      "{",
      "  int H = a.size();",
      "  int W = a.at(0).size();",
      "  vector<vector<ll>> imos(H + 1, vector<ll>(W + 1, 0));",
      "  for(auto square : squares){",
      "    imos.at(square.y1).at(square.x1)++;",
      "    imos.at(square.y1).at(square.x2 + 1)--;",
      "    imos.at(square.y2 + 1).at(square.x1)--;",
      "    imos.at(square.y2 + 1).at(square.x2 + 1)++;",
      "  }",
      "  rep(i, H) rep(j, W)",
      "  {",
      "    imos.at(i + 1).at(j) += imos.at(i).at(j);",
      "  }",
      "  rep(i, H) rep(j, W)",
      "  {",
      "    imos.at(i).at(j + 1) += imos.at(i).at(j);",
      "  }",
      "  return imos;",
      "}",
    ]
  }
}