{
  "Circular-Coordinate": {
    "prefix": "circular-coordinate",
    "description": "0からN-1までの円形の座標を扱う",
    "body": [
      "struct CircularPath",
      "{",
      "  ll left;",
      "  ll right;",
      "  // 0: left, 1: right",
      "  ll at(ll i)",
      "  {",
      "    return i ? left : right;",
      "  }",
      "};",
      "struct CircularCoordinate",
      "{",
      "  // i <= j は前提としていません",
      "  ll N;",
      "  CircularCoordinate(ll N) : N(N) {}",
      "  CircularPath pathlens(ll from, ll to)",
      "  {",
      "    return {",
      "      N - abs(from - to), // left",
      "      abs(from - to),     // right",
      "    };",
      "  }",
      "  ll shortest_distance(ll from, ll to)",
      "  {",
      "    auto res = pathlens(from, to);",
      "    return min(res.left, res.right);",
      "  }",
      "  ll longest_distance(ll from, ll to)",
      "  {",
      "    auto res = pathlens(from, to);",
      "    return max(res.left, res.right);",
      "  }",
      "  bool is_clockwise(ll from, ll to, ll pathlen)",
      "  {",
      "    return pathlen == pathlens(from, to).right;",
      "  }",
      "  bool is_path_clockwise(ll from, ll to)",
      "  {",
      "    return pathlens(from, to).right == abs(from - to);",
      "  }",
      "  // 通れる方のパスのインデックスを返す。",
      "  ll passable_path(ll from, ll to, ll object)",
      "  {",
      "    auto [a, b] = pathlens(from, to);",
      "    // return a == abs(from - object) + abs(object - to);",
      "    if (min(from, to) <= object && object <= max(from, to))",
      "    {",
      "      return a;",
      "    }",
      "    else",
      "    {",
      "      return b;",
      "    }",
      "  }",
      "};"
    ]
  }
}